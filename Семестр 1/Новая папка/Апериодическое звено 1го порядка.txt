function system_with_PID
    % Время моделирования
    t_total = 30000;  % Общее время моделирования (в секундах)
    h = 1;  % Шаг по времени (в секундах)
    t = 0:h:t_total;  % Вектор времени
    N = length(t);  % Количество шагов на основе времени моделирования и шага

    % Начальные условия [T_р.к., T_p, Q_H]
    x = zeros(3, N);  % Массив для хранения результатов
    x(:,1) = [0; 0; 0];  % Начальные температуры и теплота

    % Параметры системы
    c = 4200;  % Удельная теплоёмкость воды, Дж/(кг·°C)
    mp = 0.192;   % Масса воды в рубашке, кг
    mp_k = 0.011; % Масса воды в рабочей камере, кг
    k1 = 0.547;  % Коэффициент теплопередачи в среду
    k2 = 1.05;   % Коэффициент теплопередачи между рубашкой и камерой
    T = 10;      % Постоянная времени системы
    k = 1;       % Коэффициент управляющего воздействия

    % Матрицы системы
    A = [-k2/(c*mp_k), k2/(c*mp_k), 0;
         k2/(c*mp), -(k2/(c*mp) + k1/(c*mp)), 1/(c*mp);
         0, 0, -1/T];
    
    B = [0; 0; k/T];

    % Настройка ПИД-регулятора
    Kp = 0.0008;  % Пропорциональный коэффициент
    Ti = 6;       % Интегральная постоянная времени
    Td = 1;       % Дифференциальная постоянная времени
    kd = h / (Td + h); % Коэффициент для D-составляющей по предложенному принципу

    % Постоянная времени апериодического звена
    T_f = 5;    % Постоянная времени фильтра первого порядка
    y_filtered = 0;  % Начальное значение для апериодического звена

    % Управляющее воздействие (инициализация)
    u = zeros(1, N);       % Вектор управления
    error_integral = 0;    % Интеграл ошибки
    error_prev = 0;        % Предыдущее значение ошибки для D-составляющей
    D_term = 0;            % Инициализация фильтрованной D-составляющей
    setpoint = 80;         % Желаемая температура уставки (в °C)

    % Основной цикл моделирования методом Эйлера
    for i = 1:N-1
        % Вычисляем ошибку с добавлением шума ±5%
        noise = (rand() * 0.1 - 0.05) * setpoint;  % Шум от -5% до +5%
        error = setpoint - (x(1,i) + noise);
        
        % Интегрируем ошибку
        error_integral = error_integral + error * h;
        
        % Дискретная фильтрация для D-составляющей по предложенной формуле
        D_term = kd * error + (1 - kd) * D_term;

        % ПИД-регулятор с фильтрованной D-составляющей
        u_pid = Kp * (error + (1/Ti) * error_integral + D_term);
        
        % Апериодическое звено первого порядка для фильтрации управляющего сигнала
        y_filtered = y_filtered + (h / T_f) * (u_pid - y_filtered);
        
        % Ограничение мощности нагревателя (например, мощность не может быть отрицательной)
        u(i) = max(0, y_filtered);
        
        % Дискретное моделирование
        x(:,i+1) = (A * x(:,i) + B * u(i)) * h + x(:,i);
    end

    % Построение графиков
    plot(t, x(1,:), 'r', 'LineWidth', 2);
    title('Температура рабочей камеры T_{р.к.}(t) (X1)');
    xlabel('Время (с)');
    ylabel('T_{р.к.} (°C)');
    grid on;
end
